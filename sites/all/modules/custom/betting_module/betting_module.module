<?php

/**
 * Implements hook_menu()
 */

function betting_module_menu() {
  $items['prediction-form/%'] = array(
    'title' => 'Prediction Form',
    'page callback' => 'bet_form',
    'type' => MENU_CALLBACK,
    'access callback' => array('access_callback_function'),
  );

  $items['pay-form'] = array(
    'title' => 'Pay Form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pay_form'),
    'access callback' => array('access_callback_function'),
  );

  return $items;
}

function access_callback_function() {
   $path = drupal_get_path_alias();
   $patterns = 'ad/*';
    if (user_is_logged_in() || $path == 'how-to-play'|| drupal_match_path($path, $patterns)) {
    return TRUE;
  }
  elseif (!user_is_logged_in()) {
   drupal_goto('/user/login');
  }
}

function get_access() {
  if (user_is_logged_in()) {
    return TRUE;
  }
  elseif (!user_is_logged_in()) {
    drupal_goto('/user/login');
  }

  return FALSE;
}

function bet_form() {
  $nid = arg(1);
  $renderable_form = array();
  if (is_numeric($nid) && !empty($nid)) {
    $_SESSION['nid'] = $nid;
  }
  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $renderable_form;
  }

  $renderable_form[0] = drupal_get_form('betting_form');
  $renderable_form[1] =  drupal_get_form('betting_form2');
  $renderable_form[2] =  drupal_get_form('betting_form3');
  $renderable_form[3] =  drupal_get_form('betting_form4');
  $renderable_form[4] =  drupal_get_form('betting_form5');
  $renderable_form[5] =  drupal_get_form('betting_form6');
  $renderable_form[6] =  drupal_get_form('betting_form7');
  $renderable_form[7] =  drupal_get_form('betting_form8');
  $renderable_form[8] =  drupal_get_form('betting_form9');
  $renderable_form[9] =  drupal_get_form('betting_form10');
  $renderable_form[10] = drupal_get_form('betting_form11');
  $renderable_form[11] = drupal_get_form('betting_form12');
  $renderable_form[12] = drupal_get_form('betting_form13');
  $renderable_form[13] = drupal_get_form('betting_form14');
  $renderable_form[14] = drupal_get_form('betting_form15');
  $renderable_form[15] = drupal_get_form('betting_form16');
  $renderable_form[16] = drupal_get_form('betting_form17');
  $renderable_form[17] = drupal_get_form('betting_form18');

  return $renderable_form;
}


function betting_form($form, &$form_state) {
  global $user;
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $teamA = isset($node->field_team_a['und'][0]['value'])? $node->field_team_a['und'][0]['value']: NULL;
    $teamB = isset($node->field_team_b['und'][0]['value'])? $node->field_team_b['und'][0]['value']: NULL;
    $teamC = 'Tie';
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }

  // Match Winner Bet
  $form['match_winner'] = array(
    '#type' => 'fieldset',
    '#title' => 'Match Winner',
    '#attributes' => array('class' => array('betting-class')),
  );

  $form['match_winner']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 1, // Form ID
  );

  $active = array('A' => $teamA, 'B' => $teamB);
  $user_id = $user->uid;
  $id = 1;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);

  $form['match_winner']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => isset($markAnswer) ? $markAnswer : NULL,
    '#attributes' => array('class' => array('checked')),
  );

  $form['match_winner']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_match_winner'),
    '#name' => 1,
  );

  return $form;
}

function get_mark_answer($uid, $id, $nid) {
  $query = db_select('betting', 'at')
        -> fields('at', array('select_value'));
  $query->condition('at.uid', $uid);
  $query->condition('at.nid', $nid);
  $query->condition('at.form_id', $id);
  $data = $query->execute()->fetchCol();
  if (!empty($data)) {
    $option = $data[0];

    return $option;
  }

  return NULL;
}

function save_match_winner($form, &$form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['match_winner']['form_id']['#value']) ? $form_state['complete form']['match_winner']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['match_winner']['options']['#value'])? $form_state['complete form']['match_winner']['options']['#value']: NULL;

  set_session_and_redirect_user($nid, $form_id, $uid, $option);
}

function set_session_and_redirect_user($nid, $form_id, $uid, $option) {
  $_SESSION['match_id'] = $nid;
  $_SESSION['form_id'] = $form_id;

  $result = check_whether_user_has_already_added_in_cart($nid, $form_id, $uid);

  if ($result) {
    drupal_set_message(t('You have already submitted. Please delete to add back.'), 'status');
    drupal_goto('cart');
  }
  else {
    check_and_update_data($uid, $nid, $form_id, $option);
    drupal_goto('node/add/add-to-cart');
  }
}

function betting_module_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  if ($form_id == 'add_to_cart_node_form') {
    array_unshift($form['actions']['submit']['#submit'], 'check_direct_come');
    $form['field_for_match']['#access'] = FALSE;
    $form['field_form_id']['#access'] = FALSE;
    $form['title']['#access'] = FALSE;
    $form['title']['#default_value'] = 'Match';
    $form['#validate'][] = 'custom_form_validate';
    if (isset($_SESSION['match_id']) && isset($_SESSION['form_id'])) {
      $title = get_title_for_which_bet_is_made($_SESSION['form_id']);
      $form['title']['#default_value'] = $title;
      $form['field_for_match']['und'][0]['value']['#default_value'] = $_SESSION['match_id'];
      $form['field_form_id']['und'][0]['value']['#default_value'] = $_SESSION['form_id'];
    }
  }
}

function custom_form_validate($form, &$form_state) {
  if ($form_state['values']['field_add_amount']['und'][0]['value'] < 10) {
      form_set_error('field_add_amount', 'Amount must be greater than 10');
  }

  elseif ($form_state['values']['field_add_amount']['und'][0]['value'] % 10 != 0) {
    form_set_error('field_add_amount', 'Amount must be in multiples of 10 and less than 10000');
  }

  elseif ($form_state['values']['field_add_amount']['und'][0]['value'] > 10000) {
    form_set_error('field_add_amount', 'Amount must be in range 10-10000 and in multiples of 10');
  }
}

function get_title_for_which_bet_is_made($form_id) {
  $form_name = db_query('SELECT t.form_name FROM {forms} AS t WHERE t.form_id = :form_id', array(':form_id' => $form_id))->fetchAll();

  $form_name = isset($form_name[0]->form_name) ? $form_name[0]->form_name: 'Match';
  return $form_name;
}

function check_direct_come() {
  if (isset($_SESSION['match_id']) && isset($_SESSION['form_id'])) {
    //unset($_SESSION['match_id']);
    //unset($_SESSION['form_id']);
  }

  else {
    drupal_set_message(t('You cannot save that data, as you have come directly on that page.'), 'status');
    drupal_goto('/user');
  }
}

function check_whether_user_has_already_added_in_cart($nid, $form_id, $uid) {
  $query = db_select('node', 'at')
        -> fields('at', array('nid'));
  $query->join('field_data_field_for_match', 'm', "at.nid = m.entity_id");
  $query->join('field_data_field_form_id', 'f', "at.nid = f.entity_id");
  $query->condition('at.uid', $uid);
  $query->condition('at.type', 'add_to_cart');
  //$query->condition('at.status', 1);
  $query->condition('f.field_form_id_value', $form_id);
  $query->condition('m.field_for_match_value', $nid);
  $data = $query->execute()->rowCount();

  if (!empty($data)) {
    return TRUE;
  }
  return FALSE;
}


function check_and_update_data($uid, $nid, $form_id, $option) {
  $query = db_select('betting', 'at')
        -> fields('at', array())
        -> condition('at.uid', $uid)
        -> condition('at.form_id', $form_id)
        -> condition('at.nid', $nid);
  $data = $query->execute()->fetchAll();

  if (empty($data)) {
    $nid = db_insert('betting')
      ->fields(array(
        'uid' => intval($uid),
        'nid' => intval($nid),
        'form_id' => intval($form_id),
        'select_value' => $option,
        'timestamp' => REQUEST_TIME,
      ))
      ->execute();
  }

  else {
    $num_updated = db_update('betting')
      ->fields(array(
        'select_value' => $option,
      ))
      -> condition('uid', $uid)
      -> condition('form_id', $form_id)
      -> condition('nid', $nid)
      ->execute();
  }
}

function save_match_toss($form, &$form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['match_toss']['form_id']['#value']) ? $form_state['complete form']['match_toss']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['match_toss']['options']['#value'])? $form_state['complete form']['match_toss']['options']['#value']: NULL;

  set_session_and_redirect_user($nid, $form_id, $uid, $option);
}



function save_match_powerplay_runs($form, &$form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['match_powerplay_runs']['form_id']['#value']) ? $form_state['complete form']['match_powerplay_runs']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['match_powerplay_runs']['options']['#value'])? $form_state['complete form']['match_powerplay_runs']['options']['#value']: NULL;

  set_session_and_redirect_user($nid, $form_id, $uid, $option);
}


function save_highest_wicket_fall($form, &$form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['highest_wicket_fall']['form_id']['#value']) ? $form_state['complete form']['highest_wicket_fall']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['highest_wicket_fall']['options']['#value'])? $form_state['complete form']['highest_wicket_fall']['options']['#value']: NULL;

  set_session_and_redirect_user($nid, $form_id, $uid, $option);

}

function save_highest_fours_match($form, &$form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['highest_fours_match']['form_id']['#value']) ? $form_state['complete form']['highest_fours_match']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['highest_fours_match']['options']['#value'])? $form_state['complete form']['highest_fours_match']['options']['#value']: NULL;

  set_session_and_redirect_user($nid, $form_id, $uid, $option);

}

function save_highest_six_match($form, &$form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['highest_six_match']['form_id']['#value']) ? $form_state['complete form']['highest_six_match']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['highest_six_match']['options']['#value'])? $form_state['complete form']['highest_six_match']['options']['#value']: NULL;

  set_session_and_redirect_user($nid, $form_id, $uid, $option);
}

function save_extra_runs_given($form, &$form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['extra_runs_given']['form_id']['#value']) ? $form_state['complete form']['extra_runs_given']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['extra_runs_given']['options']['#value'])? $form_state['complete form']['extra_runs_given']['options']['#value']: NULL;

  set_session_and_redirect_user($nid, $form_id, $uid, $option);

}

function save_top_batsman_match($form, &$form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['top_batsman_match']['form_id']['#value']) ? $form_state['complete form']['top_batsman_match']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['top_batsman_match']['options']['#value'])? $form_state['complete form']['top_batsman_match']['options']['#value']: NULL;

 set_session_and_redirect_user($nid, $form_id, $uid, $option);

}


function save_top_bowler_match($form, &$form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['top_bowler_match']['form_id']['#value']) ? $form_state['complete form']['top_bowler_match']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['top_bowler_match']['options']['#value'])? $form_state['complete form']['top_bowler_match']['options']['#value']: NULL;

  set_session_and_redirect_user($nid, $form_id, $uid, $option);
}

function save_highest_partnership($form, $form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['highest_partnership']['form_id']['#value']) ? $form_state['complete form']['highest_partnership']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['highest_partnership']['options']['#value'])? $form_state['complete form']['highest_partnership']['options']['#value']: NULL;

  set_session_and_redirect_user($nid, $form_id, $uid, $option);
}

function save_highest_catch_without_keeper($form, $form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['highest_catch_without_keeper']['form_id']['#value']) ? $form_state['complete form']['highest_catch_without_keeper']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['highest_catch_without_keeper']['options']['#value'])? $form_state['complete form']['highest_catch_without_keeper']['options']['#value']: NULL;

  set_session_and_redirect_user($nid, $form_id, $uid, $option);
}

function save_player_score_50($form, $form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['player_score_50']['form_id']['#value']) ? $form_state['complete form']['player_score_50']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['player_score_50']['options']['#value'])? $form_state['complete form']['player_score_50']['options']['#value']: NULL;

  set_session_and_redirect_user($nid, $form_id, $uid, $option);
}

function save_highest_poweplay_4s($form, $form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['highest_poweplay_4s']['form_id']['#value']) ? $form_state['complete form']['highest_poweplay_4s']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['highest_poweplay_4s']['options']['#value'])? $form_state['complete form']['highest_poweplay_4s']['options']['#value']: NULL;

 set_session_and_redirect_user($nid, $form_id, $uid, $option);
}


function save_highest_dismissal_keeper($form, $form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['highest_dismissal_keeper']['form_id']['#value']) ? $form_state['complete form']['highest_dismissal_keeper']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['highest_dismissal_keeper']['options']['#value'])? $form_state['complete form']['highest_dismissal_keeper']['options']['#value']: NULL;

  set_session_and_redirect_user($nid, $form_id, $uid, $option);
}


// For Paytm, Right now no need.
function pay_form($form, &$form_state) {
  $form['order_id'] = array(
    '#title' => 'ORDER_ID',
    '#description' => 'Order ID',
    '#type' => 'textfield',
    '#required' => TRUE,
  );


  $form['cust_id'] = array(
    '#title' => 'CUST_ID',
    '#type' => 'textfield',
    '#description' => 'Customer ID',
    '#required' => TRUE,
  );

  $form['industry_type_id'] = array(
    '#title' => 'INDUSTRY_TYPE_ID',
    '#description' => 'Industry Type ID',
    '#type' => 'textfield',
    '#required' => TRUE,
  );

  $form['channel_id'] = array(
    '#title' => 'CHANNEL_ID',
    '#description' => 'Channel ID',
    '#type' => 'textfield',
    '#required' => TRUE,
  );

  $form['txn_amt'] = array(
    '#title' => 'TXN_AMOUNT',
    '#description' => 'Transaction Amount',
    '#type' => 'textfield',
    '#required' => TRUE,
    '#element_validate' => array('amount_element_validate'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Proceed'),
    '#submit' => array('pay_submit'),
    '#name' => 100,
  );

  return $form;
}


function pay_submit($form, &$form_state) {
  // dpm($form_state);
}


function amount_element_validate($element, &$form_state, $form) {
   if (!is_numeric($element['#value'])) {
     form_error($element, t('Please enter a valid amount number.'));
   }
   elseif ($element['#value'] % 10 != 0) {
    form_error($element, t('Amount must be in multiples of 10'));
   }
}

function betting_form2($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $teamA = isset($node->field_team_a['und'][0]['value'])? $node->field_team_a['und'][0]['value']: NULL;
    $teamB = isset($node->field_team_b['und'][0]['value'])? $node->field_team_b['und'][0]['value']: NULL;
    $teamC = 'Tie';
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }

  // Match Toss Bet
  $form['match_toss'] = array(
    '#type' => 'fieldset',
    '#title' => 'Match Toss',
  );

  $form['match_toss']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 2, // Form ID
  );

  $active = array('A' => $teamA, 'B' => $teamB);
  global $user;
  $user_id = $user->uid;
  $id = 2;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);

  $form['match_toss']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => isset($markAnswer) ? $markAnswer : NULL,
    '#attributes' => array('class' => array('checked')),
  );

  $form['match_toss']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_match_toss'),
    '#name' => 2,
  );

  return $form;

}


function betting_form3($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $teamA = isset($node->field_team_a['und'][0]['value'])? $node->field_team_a['und'][0]['value']: NULL;
    $teamB = isset($node->field_team_b['und'][0]['value'])? $node->field_team_b['und'][0]['value']: NULL;
    $teamC = 'Tie';
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }

  // Highest Powerplay Runs

  $form['match_powerplay_runs'] = array(
    '#type' => 'fieldset',
    '#title' => 'Highest Powerplay Runs',
  );

  $form['match_powerplay_runs']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 3, // Form ID
  );

  $active = array('A' => $teamA, 'B' => $teamB, 'C' => $teamC);
  global $user;
  $user_id = $user->uid;
  $id = 3;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);

  $form['match_powerplay_runs']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => isset($markAnswer) ? $markAnswer : NULL,
    '#attributes' => array('class' => array('checked')),
  );

   $form['match_powerplay_runs']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_match_powerplay_runs'),
    '#name' => 3,
  );

   return $form;
 }


function betting_form4($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $teamA = isset($node->field_team_a['und'][0]['value'])? $node->field_team_a['und'][0]['value']: NULL;
    $teamB = isset($node->field_team_b['und'][0]['value'])? $node->field_team_b['und'][0]['value']: NULL;
    $teamC = 'Tie';
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }

  // Highest Wicket Fall

  $form['highest_wicket_fall'] = array(
    '#type' => 'fieldset',
    '#title' => 'Highest Wicket Fall',
  );

  $form['highest_wicket_fall']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 4, // Form ID
  );

  $active = array('A' => $teamA, 'B' => $teamB, 'C' => $teamC);
  global $user;
  $user_id = $user->uid;
  $id = 4;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);

  $form['highest_wicket_fall']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => isset($markAnswer) ? $markAnswer : NULL,
    '#attributes' => array('class' => array('checked')),
  );

  $form['highest_wicket_fall']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_highest_wicket_fall'),
    '#name' => 4,
  );

   return $form;
 }


function betting_form5($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $teamA = isset($node->field_team_a['und'][0]['value'])? $node->field_team_a['und'][0]['value']: NULL;
    $teamB = isset($node->field_team_b['und'][0]['value'])? $node->field_team_b['und'][0]['value']: NULL;
    $teamC = 'Tie';
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }

   // Highest 4's in match

  $form['highest_fours_match'] = array(
    '#type' => 'fieldset',
    '#title' => 'Highest 4s in match',
  );

  $form['highest_fours_match']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 5, // Form ID
  );

  $active = array('A' => $teamA, 'B' => $teamB, 'C' => $teamC);
  global $user;
  $user_id = $user->uid;
  $id = 5;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);



  $form['highest_fours_match']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => isset($markAnswer) ? $markAnswer : NULL,
    '#attributes' => array('class' => array('checked')),
  );

  $form['highest_fours_match']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_highest_fours_match'),
    '#name' => 5,
  );

   return $form;
 }


function betting_form6($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $teamA = isset($node->field_team_a['und'][0]['value'])? $node->field_team_a['und'][0]['value']: NULL;
    $teamB = isset($node->field_team_b['und'][0]['value'])? $node->field_team_b['und'][0]['value']: NULL;
    $teamC = 'Tie';
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }

  // Highest 6's in match
  $form['highest_six_match'] = array(
    '#type' => 'fieldset',
    '#title' => 'Highest 6s in match',
  );

  $form['highest_six_match']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 6, // Form ID
  );

  $active = array('A' => $teamA, 'B' => $teamB, 'C' => $teamC);
  global $user;
  $user_id = $user->uid;
  $id = 6;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);



  $form['highest_six_match']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => isset($markAnswer) ? $markAnswer : NULL,
    '#attributes' => array('class' => array('checked')),
  );

  $form['highest_six_match']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_highest_six_match'),
    '#name' => 6,
  );

   return $form;
 }


function betting_form7($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $teamA = isset($node->field_team_a['und'][0]['value'])? $node->field_team_a['und'][0]['value']: NULL;
    $teamB = isset($node->field_team_b['und'][0]['value'])? $node->field_team_b['und'][0]['value']: NULL;
    $teamC = 'Tie';
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }


  // Extra runs given

  $form['extra_runs_given'] = array(
    '#type' => 'fieldset',
    '#title' => 'Extra runs given',
  );

  $form['extra_runs_given']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 7, // Form ID
  );

  $active = array('A' => $teamA, 'B' => $teamB, 'C' => $teamC);
  global $user;
  $user_id = $user->uid;
  $id = 7;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);



  $form['extra_runs_given']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => isset($markAnswer) ? $markAnswer : NULL,
    '#attributes' => array('class' => array('checked')),
  );

  $form['extra_runs_given']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_extra_runs_given'),
    '#name' => 7,
  );

   return $form;
 }


function betting_form8($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $teamA = isset($node->field_team_a['und'][0]['value'])? $node->field_team_a['und'][0]['value']: NULL;
    $teamB = isset($node->field_team_b['und'][0]['value'])? $node->field_team_b['und'][0]['value']: NULL;
    $teamC = 'Tie';
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }


  // Top Batsman in Match

  $form['top_batsman_match'] = array(
    '#type' => 'fieldset',
    '#title' => 'Top Batsman in Match',
  );

  $form['top_batsman_match']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 8, // Form ID
  );

  $active = array('A' => $teamA, 'B' => $teamB);
  global $user;
  $user_id = $user->uid;
  $id = 8;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);



  $form['top_batsman_match']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => isset($markAnswer) ? $markAnswer : NULL,
    '#attributes' => array('class' => array('checked')),
  );

  $form['top_batsman_match']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_top_batsman_match'),
    '#name' => 8,
  );

   return $form;
 }


function betting_form9($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $teamA = isset($node->field_team_a['und'][0]['value'])? $node->field_team_a['und'][0]['value']: NULL;
    $teamB = isset($node->field_team_b['und'][0]['value'])? $node->field_team_b['und'][0]['value']: NULL;
    $teamC = 'Tie';
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }

  // Top Bowler in Match

  $form['top_bowler_match'] = array(
    '#type' => 'fieldset',
    '#title' => 'Top Bowler in Match',
  );

  $form['top_bowler_match']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 9, // Form ID
  );

  $active = array('A' => $teamA, 'B' => $teamB);
  global $user;
  $user_id = $user->uid;
  $id = 9;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);



  $form['top_bowler_match']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => isset($markAnswer) ? $markAnswer : NULL,
    '#attributes' => array('class' => array('checked')),
  );

  $form['top_bowler_match']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_top_bowler_match'),
    '#name' => 9,
  );

   return $form;
 }


function betting_form10($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $teamA = isset($node->field_team_a['und'][0]['value'])? $node->field_team_a['und'][0]['value']: NULL;
    $teamB = isset($node->field_team_b['und'][0]['value'])? $node->field_team_b['und'][0]['value']: NULL;
    $teamC = 'Tie';
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }

  // Highest Opening Partnership

  $form['highest_partnership'] = array(
    '#type' => 'fieldset',
    '#title' => 'Highest Opening Partnership',
  );

  $form['highest_partnership']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 10, // Form ID
  );

  $active = array('A' => $teamA, 'B' => $teamB, 'C' => $teamC);
  global $user;
  $user_id = $user->uid;
  $id = 10;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);



  $form['highest_partnership']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => isset($markAnswer) ? $markAnswer : NULL,
    '#attributes' => array('class' => array('checked')),
  );

  $form['highest_partnership']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_highest_partnership'),
    '#name' => 10,
  );

   return $form;
 }


function betting_form11($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $teamA = isset($node->field_team_a['und'][0]['value'])? $node->field_team_a['und'][0]['value']: NULL;
    $teamB = isset($node->field_team_b['und'][0]['value'])? $node->field_team_b['und'][0]['value']: NULL;
    $teamC = 'Tie';
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }

  // Highest Catch Out Without Including Keeper

  $form['highest_catch_without_keeper'] = array(
    '#type' => 'fieldset',
    '#title' => 'Highest Catch Out Without Including Keeper',
  );

  $form['highest_catch_without_keeper']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 11, // Form ID
  );

  $active = array('A' => $teamA, 'B' => $teamB, 'C' => $teamC);
  global $user;
  $user_id = $user->uid;
  $id = 11;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);



  $form['highest_catch_without_keeper']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => isset($markAnswer) ? $markAnswer : NULL,
    '#attributes' => array('class' => array('checked')),
  );

  $form['highest_catch_without_keeper']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_highest_catch_without_keeper'),
    '#name' => 11,
  );

   return $form;
 }


function betting_form12($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $teamA = isset($node->field_team_a['und'][0]['value'])? $node->field_team_a['und'][0]['value']: NULL;
    $teamB = isset($node->field_team_b['und'][0]['value'])? $node->field_team_b['und'][0]['value']: NULL;
    $teamC = 'Tie';
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }

   // Highest Dismissal by Keeper

  $form['highest_dismissal_keeper'] = array(
    '#type' => 'fieldset',
    '#title' => 'Highest Dismissal by Keeper',
  );

  $form['highest_dismissal_keeper']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 12, // Form ID
  );

  $active = array('A' => $teamA, 'B' => $teamB, 'C' => $teamC);
  global $user;
  $user_id = $user->uid;
  $id = 12;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);



  $form['highest_dismissal_keeper']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => isset($markAnswer) ? $markAnswer : NULL,
    '#attributes' => array('class' => array('checked')),
  );

  $form['highest_dismissal_keeper']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_highest_dismissal_keeper'),
    '#name' => 12,
  );

   return $form;
 }


function betting_form13($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $teamA = isset($node->field_team_a['und'][0]['value'])? $node->field_team_a['und'][0]['value']: NULL;
    $teamB = isset($node->field_team_b['und'][0]['value'])? $node->field_team_b['und'][0]['value']: NULL;
    $teamC = 'Both Teams';
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }

   // Player Score 50
  $form['player_score_50'] = array(
    '#type' => 'fieldset',
    '#title' => 'Player Score 50',
  );

  $form['player_score_50']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 13, // Form ID
  );

  $active = array('A' => "Player score 50 from " . $teamA, 'B' => "Player score 50 from " .$teamB, 'C' => $teamC, 'D' => 'None of the above');
  global $user;
  $user_id = $user->uid;
  $id = 13;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);



  $form['player_score_50']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => isset($markAnswer) ? $markAnswer : NULL,
    '#attributes' => array('class' => array('checked')),
  );

  $form['player_score_50']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_player_score_50'),
    '#name' => 13,
  );

   return $form;
 }


function betting_form14($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $teamA = isset($node->field_team_a['und'][0]['value'])? $node->field_team_a['und'][0]['value']: NULL;
    $teamB = isset($node->field_team_b['und'][0]['value'])? $node->field_team_b['und'][0]['value']: NULL;
    $teamC = 'Tie';
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }

  // Highest Powerplay Boundaries
  $form['highest_poweplay_4s'] = array(
    '#type' => 'fieldset',
    '#title' => 'Highest Powerplay Boundaries',
  );

  $form['highest_poweplay_4s']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 14, // Form ID
  );

  $active = array('A' => $teamA, 'B' => $teamB, 'C' => $teamC);
  global $user;
  $user_id = $user->uid;
  $id = 14;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);



  $form['highest_poweplay_4s']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => isset($markAnswer) ? $markAnswer : NULL,
    '#attributes' => array('class' => array('checked')),
  );

  $form['highest_poweplay_4s']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_highest_poweplay_4s'),
    '#name' => 14,
  );

   return $form;
 }


function betting_module_node_delete($node) {
  db_delete('betting')
    ->condition('uid', $node->uid)
    ->condition('nid', $node->field_for_match['und'][0]['value'])
    ->condition('form_id', $node->field_form_id['und'][0]['value'])
    ->execute();
}

function betting_form15($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $total = count($node->field_top_batsman_of_team_a['und']);
    $active = array();
    $j = 'A';
    for ($i = 0 ; $i < $total; $i++) {
      $active[$j] = $node->field_top_batsman_of_team_a['und'][$i]['value'];
      $j++;
    }
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }

  // Highest Powerplay Boundaries
  $form['top_batsman_team_a'] = array(
    '#type' => 'fieldset',
    '#title' => 'Top Batsman Team A',
  );

  $form['top_batsman_team_a']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 15, // Form ID
  );

  global $user;
  $user_id = $user->uid;
  $id = 15;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);
  $default_value = isset($markAnswer) ? $markAnswer : NULL;
  // if (!empty($default_value)) {
  //   $default_value = str_split ( $default_value );
  // }


  $form['top_batsman_team_a']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => $default_value,
    '#attributes' => array('class' => array('checked')),
  );

  $form['top_batsman_team_a']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_top_batsman_team_a'),
    '#name' => 15,
  );

   return $form;
 }


function save_top_batsman_team_a($form, &$form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['top_batsman_team_a']['form_id']['#value']) ? $form_state['complete form']['top_batsman_team_a']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['top_batsman_team_a']['options']['#value'])? $form_state['complete form']['top_batsman_team_a']['options']['#value']: NULL;

  // $option = implode("",$option);
  set_session_and_redirect_user($nid, $form_id, $uid, $option);
}


function betting_form16($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $total = count($node->field_top_batsman_of_team_b['und']);
    $active = array();
    $j = 'A';
    for ($i = 0 ; $i < $total; $i++) {
      $active[$j] = $node->field_top_batsman_of_team_b['und'][$i]['value'];
      $j++;
    }
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }

  // Highest Powerplay Boundaries
  $form['top_batsman_team_b'] = array(
    '#type' => 'fieldset',
    '#title' => 'Top Batsman Team B',
  );

  $form['top_batsman_team_b']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 16, // Form ID
  );

  global $user;
  $user_id = $user->uid;
  $id = 16;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);
  $default_value = isset($markAnswer) ? $markAnswer : NULL;
  // if (!empty($default_value)) {
  //   $default_value = str_split ( $default_value );
  // }


  $form['top_batsman_team_b']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => $default_value,
    '#attributes' => array('class' => array('checked')),
  );

  $form['top_batsman_team_b']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_top_batsman_team_b'),
    '#name' => 16,
  );

   return $form;
 }


function save_top_batsman_team_b($form, &$form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['top_batsman_team_b']['form_id']['#value']) ? $form_state['complete form']['top_batsman_team_b']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['top_batsman_team_b']['options']['#value'])? $form_state['complete form']['top_batsman_team_b']['options']['#value']: NULL;
  // $option = implode("",$option);
  set_session_and_redirect_user($nid, $form_id, $uid, $option);
}


function betting_form17($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $total = count($node->field_top_bowler_of_team_a['und']);
    $active = array();
    $j = 'A';
    for ($i = 0 ; $i < $total; $i++) {
      $active[$j] = $node->field_top_bowler_of_team_a['und'][$i]['value'];
      $j++;
    }
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }

  // Highest Powerplay Boundaries
  $form['top_bowler_team_a'] = array(
    '#type' => 'fieldset',
    '#title' => 'Top Bowler Team A',
  );

  $form['top_bowler_team_a']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 17, // Form ID
  );

  global $user;
  $user_id = $user->uid;
  $id = 17;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);
  $default_value = isset($markAnswer) ? $markAnswer : NULL;
  // if (!empty($default_value)) {
  //   $default_value = str_split ( $default_value );
  // }


  $form['top_bowler_team_a']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => $default_value,
    '#attributes' => array('class' => array('checked')),
  );

  $form['top_bowler_team_a']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_top_bowler_team_a'),
    '#name' => 17,
  );

   return $form;
 }


function save_top_bowler_team_a($form, &$form_state) {
  global $user;

  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['top_bowler_team_a']['form_id']['#value']) ? $form_state['complete form']['top_bowler_team_a']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['top_bowler_team_a']['options']['#value'])? $form_state['complete form']['top_bowler_team_a']['options']['#value']: NULL;
  // $option = implode("",$option);
  set_session_and_redirect_user($nid, $form_id, $uid, $option);
}


function betting_form18($form, &$form_state) {
  $form['nid'] = array(
   '#type' => 'hidden',
   '#value' => $_SESSION['nid'], // Nid of the Match will come
  );

  $node = node_load($_SESSION['nid']);
  if (!empty($node)) {
    $total = count($node->field_top_bowler_of_team_b['und']);
    $active = array();
    $j = 'A';
    for ($i = 0 ; $i < $total; $i++) {
      $active[$j] = $node->field_top_bowler_of_team_b['und'][$i]['value'];
      $j++;
    }
  }

  else {
    drupal_set_message(t("Access denied"), 'warning');

    return $form;
  }

  // Highest Powerplay Boundaries
  $form['top_bowler_team_b'] = array(
    '#type' => 'fieldset',
    '#title' => 'Top Bowler Team B',
  );

  $form['top_bowler_team_b']['form_id'] = array(
   '#type' => 'hidden',
   '#value' => 18, // Form ID
  );

  global $user;
  $user_id = $user->uid;
  $id = 18;
  $markAnswer = get_mark_answer($user_id, $id, $_SESSION['nid']);
  $default_value = isset($markAnswer) ? $markAnswer : NULL;
  // if (!empty($default_value)) {
  //   $default_value = str_split ( $default_value );
  // }


  $form['top_bowler_team_b']['options'] = array(
    '#type' => 'radios',
    '#options' => $active,
    '#required' => TRUE,
    '#default_value' => $default_value,
    '#attributes' => array('class' => array('checked')),
  );

  $form['top_bowler_team_b']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Join'),
    '#submit' => array('save_top_bowler_team_b'),
    '#name' => 18,
  );

   return $form;
 }


function save_top_bowler_team_b($form, &$form_state) {
  global $user;

  // dpm($form_state);
  $uid = $user->uid;
  $nid = isset($form_state['complete form']['nid']['#value']) ? $form_state['complete form']['nid']['#value']: NULL;
  $form_id = isset($form_state['complete form']['top_bowler_team_b']['form_id']['#value']) ? $form_state['complete form']['top_bowler_team_b']['form_id']['#value']: NULL;
  $option = isset($form_state['complete form']['top_bowler_team_b']['options']['#value'])? $form_state['complete form']['top_bowler_team_b']['options']['#value']: NULL;
  // if (count())
  // $option = implode("",$option);
  // dpm($option);
  set_session_and_redirect_user($nid, $form_id, $uid, $option);
}
